{"ast":null,"code":"var _jsxFileName = \"/home/rupali/Asessment 3/frontend/src/components/Profile.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    const fetchUserInfo = async () => {\n      const token = localStorage.getItem('token');\n      console.log(\"Token:\", token); // Log token for debugging\n      if (token) {\n        try {\n          const response = await axios.get('http://localhost:5001/api/profile', {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          console.log(\"User data:\", response.data); // Log user data for debugging\n          setUser(response.data);\n        } catch (error) {\n          console.error(\"Error fetching user info:\", error);\n        }\n      } else {\n        // If no token, try to get user info from local storage\n        const storedUser = localStorage.getItem('user');\n        if (storedUser) {\n          setUser(JSON.parse(storedUser));\n        }\n      }\n    };\n    fetchUserInfo();\n  }, []);\n  const formik = useFormik({\n    initialValues: user || {\n      firstName: '',\n      lastName: '',\n      email: ''\n    },\n    validationSchema: Yup.object({\n      firstName: Yup.string().required('First name is required'),\n      lastName: Yup.string().required('Last name is required'),\n      email: Yup.string().email('Invalid email address').required('Email is required')\n    }),\n    enableReinitialize: true,\n    onSubmit: async values => {\n      const token = localStorage.getItem('token');\n      try {\n        await axios.put('http://localhost:5001/api/profile', values, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        alert('Profile updated successfully!');\n      } catch (error) {\n        console.error(\"Error updating profile:\", error);\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      children: \"User Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), user ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      className: \"mt-4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading user information...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n_s(Profile, \"ZBWs06E/fqn02uR3yy8bB0my9Ro=\", false, function () {\n  return [useFormik];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useEffect","useState","useFormik","Yup","axios","jsxDEV","_jsxDEV","Profile","_s","user","setUser","fetchUserInfo","token","localStorage","getItem","console","log","response","get","headers","Authorization","data","error","storedUser","JSON","parse","formik","initialValues","firstName","lastName","email","validationSchema","object","string","required","enableReinitialize","onSubmit","values","put","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","handleSubmit","_c","$RefreshReg$"],"sources":["/home/rupali/Asessment 3/frontend/src/components/Profile.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\ninterface UserProfile {\n    firstName: string;\n    lastName: string;\n    email: string;\n}\n\nconst Profile: React.FC = () => {\n    const [user, setUser] = useState<UserProfile | null>(null);\n    \n    useEffect(() => {\n        const fetchUserInfo = async () => {\n            const token = localStorage.getItem('token');\n            console.log(\"Token:\", token); // Log token for debugging\n            if (token) {\n                try {\n                    const response = await axios.get<UserProfile>('http://localhost:5001/api/profile', {\n                        headers: { Authorization: `Bearer ${token}` },\n                    });\n                    console.log(\"User data:\", response.data); // Log user data for debugging\n                    setUser(response.data);\n                } catch (error) {\n                    console.error(\"Error fetching user info:\", error);\n                }\n            } else {\n                // If no token, try to get user info from local storage\n                const storedUser = localStorage.getItem('user');\n                if (storedUser) {\n                    setUser(JSON.parse(storedUser));\n                }\n            }\n        };\n\n        fetchUserInfo();\n    }, []);\n\n    const formik = useFormik({\n        initialValues: user || { firstName: '', lastName: '', email: '' },\n        validationSchema: Yup.object({\n            firstName: Yup.string().required('First name is required'),\n            lastName: Yup.string().required('Last name is required'),\n            email: Yup.string().email('Invalid email address').required('Email is required'),\n        }),\n        enableReinitialize: true,\n        onSubmit: async (values) => {\n            const token = localStorage.getItem('token');\n            try {\n                await axios.put('http://localhost:5001/api/profile', values, {\n                    headers: { Authorization: `Bearer ${token}` },\n                });\n                alert('Profile updated successfully!');\n            } catch (error) {\n                console.error(\"Error updating profile:\", error);\n            }\n        },\n    });\n\n    return (\n        <div className=\"container mt-5\">\n            <h1 className=\"text-center\">User Profile</h1>\n            {user ? (\n                <form onSubmit={formik.handleSubmit} className=\"mt-4\">\n                    {/* Form Fields */}\n                </form>\n            ) : (\n                <p>Loading user information...</p>\n            )}\n        </div>\n    );\n};\n\nexport default Profile;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}