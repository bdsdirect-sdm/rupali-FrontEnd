{"ast":null,"code":"var _jsxFileName = \"/home/rupali/Asessment 5/frontend/src/components/login.tsx\",\n  _s = $RefreshSig$();\n// // import React from 'react';\n// // import { useFormik } from 'formik';\n// // import * as Yup from 'yup';\n// // import axios from 'axios';\n// // import 'bootstrap/dist/css/bootstrap.min.css';\n\n// // interface LoginFormValues {\n// //     email: string;\n// //     password: string;\n// // }\n\n// // const Login: React.FC = () => {\n\n// //     const formik = useFormik<LoginFormValues>({\n// //         initialValues: {\n// //             email: '',\n// //             password: '',\n// //         },\n// //         validationSchema: Yup.object({\n// //             email: Yup.string()\n// //                 .email('Invalid email address')\n// //                 .required('Email is required'),\n// //             password: Yup.string()\n// //                 .min(6, 'Password must be at least 6 characters')\n// //                 .required('Password is required'),\n// //         }),\n// //         onSubmit: async (values) => {\n// //             try {\n// //                 const response = await axios.post('http://localhost:5001/api/login', values);\n\n// //                 const { token, user } = response.data; \n// //                 localStorage.setItem('token', token); \n// //                 localStorage.setItem('user', JSON.stringify(user)); \n\n// //                 alert('Login successful!');\n// //                 window.location.href = '/profile'; \n// //             } catch (error) {\n// //                 alert('Error logging in. Please try again.'); \n// //             }\n// //         }\n\n// //     });\n\n// //     return (\n// //         <div className=\"container mt-5\">\n// //             <form onSubmit={formik.handleSubmit} className=\"bg-light p-4 rounded shadow\">\n// //                 <h2 className=\"mb-4\">Login</h2>\n// //                 <div className=\"mb-3\">\n// //                     <label htmlFor=\"email\" className=\"form-label\">Email</label>\n// //                     <input\n// //                         id=\"email\"\n// //                         name=\"email\"\n// //                         type=\"email\"\n// //                         onChange={formik.handleChange}\n// //                         onBlur={formik.handleBlur}\n// //                         value={formik.values.email}\n// //                         required\n// //                         placeholder=\"Email\"\n// //                         className={`form-control ${formik.touched.email && formik.errors.email ? 'is-invalid' : ''}`}\n// //                     />\n// //                     {formik.touched.email && formik.errors.email ? (\n// //                         <div className=\"invalid-feedback\">{formik.errors.email}</div>\n// //                     ) : null}\n// //                 </div>\n// //                 <div className=\"mb-3\">\n// //                     <label htmlFor=\"password\" className=\"form-label\">Password</label>\n// //                     <input\n// //                         id=\"password\"\n// //                         name=\"password\"\n// //                         type=\"password\"\n// //                         onChange={formik.handleChange}\n// //                         onBlur={formik.handleBlur}\n// //                         value={formik.values.password}\n// //                         required\n// //                         placeholder=\"Password\"\n// //                         className={`form-control ${formik.touched.password && formik.errors.password ? 'is-invalid' : ''}`}\n// //                     />\n// //                     {formik.touched.password && formik.errors.password ? (\n// //                         <div className=\"invalid-feedback\">{formik.errors.password}</div>\n// //                     ) : null}\n// //                 </div>\n// //                 <button type=\"submit\" className=\"btn btn-primary\">Login</button>\n// //                 <div className=\"mt-3\">\n// //                     <a href=\"/signup\">Don't have an account? Sign Up</a>\n// //                 </div>\n// //             </form>\n// //         </div>\n// //     );\n// // };\n\n// // export default Login;\n\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n\n// const Login: React.FC = () => {\n//     const navigate = useNavigate();\n//     const [credentials, setCredentials] = useState({ email: '', password: '' });\n\n//     const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//         const { name, value } = e.target;\n//         setCredentials({ ...credentials, [name]: value });\n//     };\n\n//     const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n//         e.preventDefault();\n//         try {\n//             const response = await axios.post('http://localhost:5001/api/login', credentials);\n//             // Save user data (e.g., token) to local storage or context\n//             alert('Login successful!');\n//             navigate(response.data.userType === 'Agency' ? \"/agency-dashboard\" : \"/jobseeker-dashboard\");\n//         } catch (error) {\n//             alert('Error logging in. Please try again.');\n//         }\n//     };\n\n//     return (\n//         <form onSubmit={handleSubmit}>\n//             <input name=\"email\" type=\"email\" onChange={handleChange} required placeholder=\"Email\" />\n//             <input name=\"password\" type=\"password\" onChange={handleChange} required placeholder=\"Password\" />\n//             <button type=\"submit\">Login</button>\n//         </form>\n//     );\n// };\n\n// export default Login;\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const navigate = useNavigate();\n  const [credentials, setCredentials] = useState({\n    email: '',\n    password: ''\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCredentials({\n      ...credentials,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:5001/api/login', credentials);\n      alert('Login successful!');\n      navigate(response.data.userType === 'Agency' ? \"/agency-dashboard\" : \"/jobseeker-dashboard\");\n    } catch (error) {\n      alert('Error logging in. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"bg-light p-4 rounded shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"mb-4 text-center\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          className: \"form-label\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"email\",\n          type: \"email\",\n          onChange: handleChange,\n          required: true,\n          placeholder: \"Email\",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          className: \"form-label\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"password\",\n          type: \"password\",\n          onChange: handleChange,\n          required: true,\n          placeholder: \"Password\",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary w-100\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3 text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/signup\",\n          children: \"Don't have an account? Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"YSEs/XnwcdxzwFUKZHGSzP2mjgI=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","Login","_s","navigate","credentials","setCredentials","email","password","handleChange","e","name","value","target","handleSubmit","preventDefault","response","post","alert","data","userType","error","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","onChange","required","placeholder","href","_c","$RefreshReg$"],"sources":["/home/rupali/Asessment 5/frontend/src/components/login.tsx"],"sourcesContent":["// // import React from 'react';\n// // import { useFormik } from 'formik';\n// // import * as Yup from 'yup';\n// // import axios from 'axios';\n// // import 'bootstrap/dist/css/bootstrap.min.css';\n\n\n// // interface LoginFormValues {\n// //     email: string;\n// //     password: string;\n// // }\n\n// // const Login: React.FC = () => {\n    \n// //     const formik = useFormik<LoginFormValues>({\n// //         initialValues: {\n// //             email: '',\n// //             password: '',\n// //         },\n// //         validationSchema: Yup.object({\n// //             email: Yup.string()\n// //                 .email('Invalid email address')\n// //                 .required('Email is required'),\n// //             password: Yup.string()\n// //                 .min(6, 'Password must be at least 6 characters')\n// //                 .required('Password is required'),\n// //         }),\n// //         onSubmit: async (values) => {\n// //             try {\n// //                 const response = await axios.post('http://localhost:5001/api/login', values);\n                \n            \n// //                 const { token, user } = response.data; \n// //                 localStorage.setItem('token', token); \n// //                 localStorage.setItem('user', JSON.stringify(user)); \n                \n// //                 alert('Login successful!');\n// //                 window.location.href = '/profile'; \n// //             } catch (error) {\n// //                 alert('Error logging in. Please try again.'); \n// //             }\n// //         }\n        \n// //     });\n\n// //     return (\n// //         <div className=\"container mt-5\">\n// //             <form onSubmit={formik.handleSubmit} className=\"bg-light p-4 rounded shadow\">\n// //                 <h2 className=\"mb-4\">Login</h2>\n// //                 <div className=\"mb-3\">\n// //                     <label htmlFor=\"email\" className=\"form-label\">Email</label>\n// //                     <input\n// //                         id=\"email\"\n// //                         name=\"email\"\n// //                         type=\"email\"\n// //                         onChange={formik.handleChange}\n// //                         onBlur={formik.handleBlur}\n// //                         value={formik.values.email}\n// //                         required\n// //                         placeholder=\"Email\"\n// //                         className={`form-control ${formik.touched.email && formik.errors.email ? 'is-invalid' : ''}`}\n// //                     />\n// //                     {formik.touched.email && formik.errors.email ? (\n// //                         <div className=\"invalid-feedback\">{formik.errors.email}</div>\n// //                     ) : null}\n// //                 </div>\n// //                 <div className=\"mb-3\">\n// //                     <label htmlFor=\"password\" className=\"form-label\">Password</label>\n// //                     <input\n// //                         id=\"password\"\n// //                         name=\"password\"\n// //                         type=\"password\"\n// //                         onChange={formik.handleChange}\n// //                         onBlur={formik.handleBlur}\n// //                         value={formik.values.password}\n// //                         required\n// //                         placeholder=\"Password\"\n// //                         className={`form-control ${formik.touched.password && formik.errors.password ? 'is-invalid' : ''}`}\n// //                     />\n// //                     {formik.touched.password && formik.errors.password ? (\n// //                         <div className=\"invalid-feedback\">{formik.errors.password}</div>\n// //                     ) : null}\n// //                 </div>\n// //                 <button type=\"submit\" className=\"btn btn-primary\">Login</button>\n// //                 <div className=\"mt-3\">\n// //                     <a href=\"/signup\">Don't have an account? Sign Up</a>\n// //                 </div>\n// //             </form>\n// //         </div>\n// //     );\n// // };\n\n// // export default Login;\n\n\n\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n\n// const Login: React.FC = () => {\n//     const navigate = useNavigate();\n//     const [credentials, setCredentials] = useState({ email: '', password: '' });\n\n//     const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//         const { name, value } = e.target;\n//         setCredentials({ ...credentials, [name]: value });\n//     };\n\n//     const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n//         e.preventDefault();\n//         try {\n//             const response = await axios.post('http://localhost:5001/api/login', credentials);\n//             // Save user data (e.g., token) to local storage or context\n//             alert('Login successful!');\n//             navigate(response.data.userType === 'Agency' ? \"/agency-dashboard\" : \"/jobseeker-dashboard\");\n//         } catch (error) {\n//             alert('Error logging in. Please try again.');\n//         }\n//     };\n\n//     return (\n//         <form onSubmit={handleSubmit}>\n//             <input name=\"email\" type=\"email\" onChange={handleChange} required placeholder=\"Email\" />\n//             <input name=\"password\" type=\"password\" onChange={handleChange} required placeholder=\"Password\" />\n//             <button type=\"submit\">Login</button>\n//         </form>\n//     );\n// };\n\n// export default Login;\n\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst Login: React.FC = () => {\n    const navigate = useNavigate();\n    const [credentials, setCredentials] = useState({ email: '', password: '' });\n\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const { name, value } = e.target;\n        setCredentials({ ...credentials, [name]: value });\n    };\n\n    const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        try {\n            const response = await axios.post('http://localhost:5001/api/login', credentials);\n            alert('Login successful!');\n            navigate(response.data.userType === 'Agency' ? \"/agency-dashboard\" : \"/jobseeker-dashboard\");\n        } catch (error) {\n            alert('Error logging in. Please try again.');\n        }\n    };\n\n    return (\n        <div className=\"container mt-5\">\n            <form onSubmit={handleSubmit} className=\"bg-light p-4 rounded shadow\">\n                <h2 className=\"mb-4 text-center\">Login</h2>\n                <div className=\"mb-3\">\n                    <label htmlFor=\"email\" className=\"form-label\">Email</label>\n                    <input\n                        name=\"email\"\n                        type=\"email\"\n                        onChange={handleChange}\n                        required\n                        placeholder=\"Email\"\n                        className=\"form-control\"\n                    />\n                </div>\n                <div className=\"mb-3\">\n                    <label htmlFor=\"password\" className=\"form-label\">Password</label>\n                    <input\n                        name=\"password\"\n                        type=\"password\"\n                        onChange={handleChange}\n                        required\n                        placeholder=\"Password\"\n                        className=\"form-control\"\n                    />\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary w-100\">Login</button>\n                <div className=\"mt-3 text-center\">\n                    <a href=\"/signup\">Don't have an account? Sign Up</a>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default Login;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}